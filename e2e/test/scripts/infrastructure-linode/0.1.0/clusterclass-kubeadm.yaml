apiVersion: v1
kind: Secret
metadata:
  name: common-init-files
stringData:
  containerd-config.toml: |
    version = 2
    imports = ["/etc/containerd/conf.d/*.toml"]
    [plugins]
      [plugins."io.containerd.grpc.v1.cri"]
        sandbox_image = "registry.k8s.io/pause:3.9"
      [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
        runtime_type = "io.containerd.runc.v2"
      [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
        SystemdCgroup = true
  k8s-modules.conf: |
    overlay
    br_netfilter
  kubeadm-pre-init.sh: |
    #!/bin/bash
    set -euo pipefail
    export DEBIAN_FRONTEND=noninteractive
    hostnamectl set-hostname "$1" && hostname -F /etc/hostname
    mkdir -p -m 755 /etc/apt/keyrings
    PATCH_VERSION=$${2#[v]}
    VERSION=$${PATCH_VERSION%.*}
    curl -fsSL "https://pkgs.k8s.io/core:/stable:/v$VERSION/deb/Release.key" | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v$VERSION/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list
    apt-get update -y
    apt-get install -y kubelet=$PATCH_VERSION* kubeadm=$PATCH_VERSION* kubectl=$PATCH_VERSION* containerd
    apt-mark hold kubelet kubeadm kubectl containerd
    modprobe overlay
    modprobe br_netfilter
    sysctl --system
    sed -i '/swap/d' /etc/fstab
    swapoff -a
  sysctl-k8s.conf: |
    net.bridge.bridge-nf-call-iptables  = 1
    net.bridge.bridge-nf-call-ip6tables = 1
    net.ipv4.ip_forward                 = 1
---
apiVersion: v1
kind: Secret
metadata:
  name: linode-${CLUSTER_NAME}-crs-0
stringData:
  linode-token-region.yaml: |-
    kind: Secret
    apiVersion: v1
    metadata:
      name: linode-token-region
      namespace: kube-system
    stringData:
      apiToken: ${LINODE_TOKEN}
      region: ${LINODE_REGION}
type: addons.cluster.x-k8s.io/resource-set
---
apiVersion: addons.cluster.x-k8s.io/v1alpha1
kind: HelmChartProxy
metadata:
  name: cilium
spec:
  chartName: cilium
  clusterSelector:
    matchLabels:
      cni: cilium
  namespace: kube-system
  options:
    timeout: 5m
    wait: true
    waitForJobs: true
  repoURL: https://helm.cilium.io/
  valuesTemplate: |
    ipam:
      mode: kubernetes
    k8s:
      requireIPv4PodCIDR: true
    hubble:
      relay:
        enabled: true
      ui:
        enabled: true
  version: ${CILIUM_VERSION:=1.15.0}
---
apiVersion: addons.cluster.x-k8s.io/v1alpha1
kind: HelmChartProxy
metadata:
  name: linode-cloud-controller-manager
spec:
  chartName: ccm-linode
  clusterSelector:
    matchLabels:
      ccm: linode
  namespace: kube-system
  options:
    timeout: 5m
    wait: true
    waitForJobs: true
  repoURL: https://linode.github.io/linode-cloud-controller-manager/
  valuesTemplate: |
    secretRef:
      name: "linode-token-region"
    image:
      pullPolicy: IfNotPresent
  version: ${LINODE_CCM_VERSION:=v0.3.24}
---
apiVersion: addons.cluster.x-k8s.io/v1beta1
kind: ClusterResourceSet
metadata:
  name: ${CLUSTER_NAME}-crs-0
spec:
  clusterSelector:
    matchLabels:
      crs: ${CLUSTER_NAME}-crs
  resources:
  - kind: Secret
    name: linode-${CLUSTER_NAME}-crs-0
  strategy: ApplyOnce
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: kubeadm-worker
spec:
  template:
    spec:
      files:
      - contentFrom:
          secret:
            key: containerd-config.toml
            name: common-init-files
        path: /etc/containerd/config.toml
      - contentFrom:
          secret:
            key: k8s-modules.conf
            name: common-init-files
        path: /etc/modules-load.d/k8s.conf
      - contentFrom:
          secret:
            key: sysctl-k8s.conf
            name: common-init-files
        path: /etc/sysctl.d/k8s.conf
      - contentFrom:
          secret:
            key: kubeadm-pre-init.sh
            name: common-init-files
        path: /kubeadm-pre-init.sh
        permissions: "0500"
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-provider: external
            provider-id: linode://{{ ds.meta_data.id }}
          name: '{{ ds.meta_data.label }}'
      preKubeadmCommands:
      - /kubeadm-pre-init.sh '{{ ds.meta_data.label }}' ${KUBERNETES_VERSION}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: ClusterClass
metadata:
  name: kubeadm
spec:
  controlPlane:
    machineInfrastructure:
      ref:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
        kind: LinodeMachineTemplate
        name: kubeadm-control-plane
    ref:
      apiVersion: controlplane.cluster.x-k8s.io/v1beta1
      kind: KubeadmControlPlaneTemplate
      name: kubeadm-control-plane
  infrastructure:
    ref:
      apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
      kind: LinodeClusterTemplate
      name: kubeadm
  patches:
  - definitions:
    - jsonPatches:
      - op: add
        path: /spec/template/spec/region
        valueFrom:
          variable: region
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
        kind: LinodeClusterTemplate
        matchResources:
          infrastructureCluster: true
    - jsonPatches:
      - op: replace
        path: /spec/template/spec/region
        valueFrom:
          variable: region
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
        kind: LinodeMachineTemplate
        matchResources:
          controlPlane: true
    - jsonPatches:
      - op: replace
        path: /spec/template/spec/region
        valueFrom:
          variable: region
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
        kind: LinodeMachineTemplate
        matchResources:
          machineDeploymentClass:
            names:
            - default-worker
    name: region
  - definitions:
    - jsonPatches:
      - op: replace
        path: /spec/template/spec/type
        valueFrom:
          variable: controlPlaneMachineType
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
        kind: LinodeMachineTemplate
        matchResources:
          controlPlane: true
    name: controlPlaneMachineType
  - definitions:
    - jsonPatches:
      - op: replace
        path: /spec/template/spec/type
        valueFrom:
          variable: workerMachineType
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
        kind: LinodeMachineTemplate
        matchResources:
          machineDeploymentClass:
            names:
            - default-worker
    name: workerMachineType
  - definitions:
    - jsonPatches:
      - op: replace
        path: /spec/template/spec/image
        valueFrom:
          variable: osImage
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
        kind: LinodeMachineTemplate
        matchResources:
          machineDeploymentClass:
            names:
            - default-worker
    - jsonPatches:
      - op: replace
        path: /spec/template/spec/image
        valueFrom:
          variable: osImage
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
        kind: LinodeMachineTemplate
        matchResources:
          controlPlane: true
    name: osImage
  variables:
  - name: region
    required: true
    schema:
      openAPIV3Schema:
        default: us-ord
        type: string
  - name: controlPlaneMachineType
    required: true
    schema:
      openAPIV3Schema:
        default: g6-standard-2
        type: string
  - name: workerMachineType
    required: true
    schema:
      openAPIV3Schema:
        default: g6-standard-2
        type: string
  - name: osImage
    required: true
    schema:
      openAPIV3Schema:
        default: linode/ubuntu22.04
        type: string
  workers:
    machineDeployments:
    - class: default-worker
      template:
        bootstrap:
          ref:
            apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
            kind: KubeadmConfigTemplate
            name: kubeadm-worker
        infrastructure:
          ref:
            apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
            kind: LinodeMachineTemplate
            name: kubeadm-worker
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlaneTemplate
metadata:
  name: kubeadm-control-plane
spec:
  template:
    spec:
      kubeadmConfigSpec:
        clusterConfiguration:
          apiServer:
            extraArgs:
              cloud-provider: external
          controllerManager:
            extraArgs:
              cloud-provider: external
          etcd:
            local:
              dataDir: /var/lib/etcd_data/etcd
              extraArgs:
                quota-backend-bytes: "8589934592"
        diskSetup:
          filesystems:
          - device: /dev/sdc
            filesystem: ext4
            label: etcd_data
        files:
        - contentFrom:
            secret:
              key: containerd-config.toml
              name: common-init-files
          path: /etc/containerd/config.toml
        - contentFrom:
            secret:
              key: k8s-modules.conf
              name: common-init-files
          path: /etc/modules-load.d/k8s.conf
        - contentFrom:
            secret:
              key: sysctl-k8s.conf
              name: common-init-files
          path: /etc/sysctl.d/k8s.conf
        - contentFrom:
            secret:
              key: kubeadm-pre-init.sh
              name: common-init-files
          path: /kubeadm-pre-init.sh
          permissions: "0500"
        initConfiguration:
          nodeRegistration:
            kubeletExtraArgs:
              cloud-provider: external
              provider-id: linode://{{ ds.meta_data.id }}
            name: '{{ ds.meta_data.label }}'
        joinConfiguration:
          nodeRegistration:
            kubeletExtraArgs:
              cloud-provider: external
              provider-id: linode://{{ ds.meta_data.id }}
            name: '{{ ds.meta_data.label }}'
        mounts:
        - - LABEL=etcd_data
          - /var/lib/etcd_data
        preKubeadmCommands:
        - /kubeadm-pre-init.sh '{{ ds.meta_data.label }}' "${KUBERNETES_VERSION}"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: LinodeClusterTemplate
metadata:
  name: kubeadm
spec:
  template:
    spec:
      region: REPLACEME
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: LinodeMachineTemplate
metadata:
  name: kubeadm-control-plane
spec:
  template:
    spec:
      image: REPLACEME
      region: REPLACEME
      type: REPLACEME
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: LinodeMachineTemplate
metadata:
  name: kubeadm-worker
spec:
  template:
    spec:
      image: REPLACEME
      region: REPLACEME
      type: REPLACEME
