apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: cluster-api-provider-linode
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: cluster-api-provider-linode
    control-plane: controller-manager
  name: capl-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
    cluster.x-k8s.io/v1beta1: v1alpha1
  name: linodeclusters.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: LinodeCluster
    listKind: LinodeClusterList
    plural: linodeclusters
    shortNames:
    - lc
    singular: linodecluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster to which this LinodeCluster belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: Cluster infrastructure is ready for Linode instances
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: API Endpoint
      jsonPath: .spec.ControlPlaneEndpoint
      name: Endpoint
      priority: 1
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LinodeCluster is the Schema for the linodeclusters API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: LinodeClusterSpec defines the desired state of LinodeCluster
            properties:
              controlPlaneEndpoint:
                description: |-
                  ControlPlaneEndpoint represents the endpoint used to communicate with the LinodeCluster control plane.
                  If ControlPlaneEndpoint is unset then the Nodebalancer ip will be used.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              network:
                description: NetworkSpec encapsulates all things related to Linode
                  network.
                properties:
                  loadBalancerPort:
                    description: LoadBalancerPort used by the api server. It must
                      be valid ports range (1-65535). If omitted, default value is
                      6443.
                    maximum: 65535
                    minimum: 1
                    type: integer
                  loadBalancerType:
                    description: LoadBalancerType is the type of load balancer to
                      use, defaults to NodeBalancer if not otherwise set
                    enum:
                    - NodeBalancer
                    type: string
                  nodeBalancerConfigID:
                    description: NodeBalancerConfigID is the config ID of api server
                      NodeBalancer.
                    type: integer
                  nodeBalancerID:
                    description: NodeBalancerID is the id of api server NodeBalancer.
                    type: integer
                type: object
              region:
                description: The Linode Region the LinodeCluster lives in.
                type: string
              vpcRef:
                description: |-
                  ObjectReference contains enough information to let you inspect or modify the referred object.
                  ---
                  New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.
                   1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.
                   2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular
                      restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted".
                      Those cannot be well described when embedded.
                   3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.
                   4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity
                      during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple
                      and the version of the actual struct is irrelevant.
                   5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type
                      will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.


                  Instead of using this type, create a locally provided and used type that is well-focused on your reference.
                  For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                      TODO: this design is not final and this field is subject to change in the future.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
            required:
            - region
            type: object
          status:
            description: LinodeClusterStatus defines the observed state of LinodeCluster
            properties:
              conditions:
                description: Conditions defines current service state of the LinodeCluster.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: |-
                  FailureMessage will be set in the event that there is a terminal problem
                  reconciling the LinodeCluster and will contain a more verbose string suitable
                  for logging and human consumption.
                type: string
              failureReason:
                description: |-
                  FailureReason will be set in the event that there is a terminal problem
                  reconciling the LinodeCluster and will contain a succinct value suitable
                  for machine interpretation.
                type: string
              ready:
                description: Ready denotes that the cluster (infrastructure) is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
    cluster.x-k8s.io/v1beta1: v1alpha1
  name: linodeclustertemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: LinodeClusterTemplate
    listKind: LinodeClusterTemplateList
    plural: linodeclustertemplates
    shortNames:
    - lct
    singular: linodeclustertemplate
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LinodeClusterTemplate is the Schema for the linodeclustertemplates
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: LinodeClusterTemplateSpec defines the desired state of LinodeClusterTemplate
            properties:
              template:
                description: LinodeClusterTemplateResource describes the data needed
                  to create a LinodeCluster from a template.
                properties:
                  spec:
                    description: LinodeClusterSpec defines the desired state of LinodeCluster
                    properties:
                      controlPlaneEndpoint:
                        description: |-
                          ControlPlaneEndpoint represents the endpoint used to communicate with the LinodeCluster control plane.
                          If ControlPlaneEndpoint is unset then the Nodebalancer ip will be used.
                        properties:
                          host:
                            description: The hostname on which the API server is serving.
                            type: string
                          port:
                            description: The port on which the API server is serving.
                            format: int32
                            type: integer
                        required:
                        - host
                        - port
                        type: object
                      network:
                        description: NetworkSpec encapsulates all things related to
                          Linode network.
                        properties:
                          loadBalancerPort:
                            description: LoadBalancerPort used by the api server.
                              It must be valid ports range (1-65535). If omitted,
                              default value is 6443.
                            maximum: 65535
                            minimum: 1
                            type: integer
                          loadBalancerType:
                            description: LoadBalancerType is the type of load balancer
                              to use, defaults to NodeBalancer if not otherwise set
                            enum:
                            - NodeBalancer
                            type: string
                          nodeBalancerConfigID:
                            description: NodeBalancerConfigID is the config ID of
                              api server NodeBalancer.
                            type: integer
                          nodeBalancerID:
                            description: NodeBalancerID is the id of api server NodeBalancer.
                            type: integer
                        type: object
                      region:
                        description: The Linode Region the LinodeCluster lives in.
                        type: string
                      vpcRef:
                        description: |-
                          ObjectReference contains enough information to let you inspect or modify the referred object.
                          ---
                          New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.
                           1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.
                           2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular
                              restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted".
                              Those cannot be well described when embedded.
                           3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.
                           4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity
                              during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple
                              and the version of the actual struct is irrelevant.
                           5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type
                              will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.


                          Instead of using this type, create a locally provided and used type that is well-focused on your reference.
                          For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: |-
                              If referring to a piece of an object instead of an entire object, this string
                              should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container within a pod, this would take on a value like:
                              "spec.containers{name}" (where "name" refers to the name of the container that triggered
                              the event) or if no container name is specified "spec.containers[2]" (container with
                              index 2 in this pod). This syntax is chosen only to have some well-defined way of
                              referencing a part of an object.
                              TODO: this design is not final and this field is subject to change in the future.
                            type: string
                          kind:
                            description: |-
                              Kind of the referent.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                            type: string
                          name:
                            description: |-
                              Name of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          namespace:
                            description: |-
                              Namespace of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                            type: string
                          resourceVersion:
                            description: |-
                              Specific resourceVersion to which this reference is made, if any.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                            type: string
                          uid:
                            description: |-
                              UID of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                        x-kubernetes-validations:
                        - message: Value is immutable
                          rule: self == oldSelf
                    required:
                    - region
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
    cluster.x-k8s.io/v1beta1: v1alpha1
  name: linodemachines.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: LinodeMachine
    listKind: LinodeMachineList
    plural: linodemachines
    shortNames:
    - lm
    singular: linodemachine
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster to which this LinodeMachine belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: Linode instance state
      jsonPath: .status.instanceState
      name: State
      type: string
    - description: Machine ready status
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: Linode instance ID
      jsonPath: .spec.providerID
      name: InstanceID
      type: string
    - description: Machine object which owns with this LinodeMachine
      jsonPath: .metadata.ownerReferences[?(@.kind=="Machine")].name
      name: Machine
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LinodeMachine is the Schema for the linodemachines API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: LinodeMachineSpec defines the desired state of LinodeMachine
            properties:
              authorizedKeys:
                items:
                  type: string
                type: array
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              authorizedUsers:
                items:
                  type: string
                type: array
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              backupId:
                type: integer
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              backupsEnabled:
                type: boolean
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              firewallId:
                type: integer
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              group:
                type: string
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              image:
                type: string
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              instanceID:
                description: InstanceID is the Linode instance ID for this machine.
                type: integer
              interfaces:
                items:
                  description: InstanceConfigInterfaceCreateOptions defines network
                    interface config
                  properties:
                    ipRanges:
                      items:
                        type: string
                      type: array
                    ipamAddress:
                      type: string
                    ipv4:
                      description: VPCIPv4 defines VPC IPV4 settings
                      properties:
                        nat1to1:
                          type: string
                        vpc:
                          type: string
                      type: object
                    label:
                      maxLength: 63
                      minLength: 3
                      type: string
                    primary:
                      type: boolean
                    purpose:
                      description: ConfigInterfacePurpose options start with InterfacePurpose
                        and include all known interface purpose types
                      type: string
                    subnetId:
                      type: integer
                  type: object
                type: array
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              label:
                maxLength: 63
                minLength: 3
                type: string
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              metadata:
                description: InstanceMetadataOptions defines metadata of instance
                properties:
                  userData:
                    description: UserData expects a Base64-encoded string
                    type: string
                type: object
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              privateIp:
                type: boolean
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              providerID:
                description: ProviderID is the unique identifier as specified by the
                  cloud provider.
                type: string
              region:
                type: string
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              rootPass:
                type: string
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              stackscriptData:
                additionalProperties:
                  type: string
                type: object
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              stackscriptId:
                type: integer
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              tags:
                items:
                  type: string
                type: array
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              type:
                type: string
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
            required:
            - region
            - type
            type: object
          status:
            description: LinodeMachineStatus defines the observed state of LinodeMachine
            properties:
              addresses:
                description: Addresses contains the Linode instance associated addresses.
                items:
                  description: MachineAddress contains information for the node's
                    address.
                  properties:
                    address:
                      description: The machine address.
                      type: string
                    type:
                      description: Machine address type, one of Hostname, ExternalIP,
                        InternalIP, ExternalDNS or InternalDNS.
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              conditions:
                description: Conditions defines current service state of the LinodeMachine.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: |-
                  FailureMessage will be set in the event that there is a terminal problem
                  reconciling the Machine and will contain a more verbose string suitable
                  for logging and human consumption.


                  This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over
                  time (like service outages), but instead indicate that something is
                  fundamentally wrong with the Machine's spec or the configuration of
                  the controller, and that manual intervention is required. Examples
                  of terminal errors would be invalid combinations of settings in the
                  spec, values that are unsupported by the controller, or the
                  responsible controller itself being critically misconfigured.


                  Any transient errors that occur during the reconciliation of Machines
                  can be added as events to the Machine object and/or logged in the
                  controller's output.
                type: string
              failureReason:
                description: |-
                  FailureReason will be set in the event that there is a terminal problem
                  reconciling the Machine and will contain a succinct value suitable
                  for machine interpretation.


                  This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over
                  time (like service outages), but instead indicate that something is
                  fundamentally wrong with the Machine's spec or the configuration of
                  the controller, and that manual intervention is required. Examples
                  of terminal errors would be invalid combinations of settings in the
                  spec, values that are unsupported by the controller, or the
                  responsible controller itself being critically misconfigured.


                  Any transient errors that occur during the reconciliation of Machines
                  can be added as events to the Machine object and/or logged in the
                  controller's output.
                type: string
              instanceState:
                description: InstanceState is the state of the Linode instance for
                  this machine.
                type: string
              ready:
                default: false
                description: Ready is true when the provider resource is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
    cluster.x-k8s.io/v1beta1: v1alpha1
  name: linodemachinetemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: LinodeMachineTemplate
    listKind: LinodeMachineTemplateList
    plural: linodemachinetemplates
    shortNames:
    - lmt
    singular: linodemachinetemplate
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LinodeMachineTemplate is the Schema for the linodemachinetemplates
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: LinodeMachineTemplateSpec defines the desired state of LinodeMachineTemplate
            properties:
              template:
                description: LinodeMachineTemplateResource describes the data needed
                  to create a LinodeMachine from a template.
                properties:
                  spec:
                    description: LinodeMachineSpec defines the desired state of LinodeMachine
                    properties:
                      authorizedKeys:
                        items:
                          type: string
                        type: array
                        x-kubernetes-validations:
                        - message: Value is immutable
                          rule: self == oldSelf
                      authorizedUsers:
                        items:
                          type: string
                        type: array
                        x-kubernetes-validations:
                        - message: Value is immutable
                          rule: self == oldSelf
                      backupId:
                        type: integer
                        x-kubernetes-validations:
                        - message: Value is immutable
                          rule: self == oldSelf
                      backupsEnabled:
                        type: boolean
                        x-kubernetes-validations:
                        - message: Value is immutable
                          rule: self == oldSelf
                      firewallId:
                        type: integer
                        x-kubernetes-validations:
                        - message: Value is immutable
                          rule: self == oldSelf
                      group:
                        type: string
                        x-kubernetes-validations:
                        - message: Value is immutable
                          rule: self == oldSelf
                      image:
                        type: string
                        x-kubernetes-validations:
                        - message: Value is immutable
                          rule: self == oldSelf
                      instanceID:
                        description: InstanceID is the Linode instance ID for this
                          machine.
                        type: integer
                      interfaces:
                        items:
                          description: InstanceConfigInterfaceCreateOptions defines
                            network interface config
                          properties:
                            ipRanges:
                              items:
                                type: string
                              type: array
                            ipamAddress:
                              type: string
                            ipv4:
                              description: VPCIPv4 defines VPC IPV4 settings
                              properties:
                                nat1to1:
                                  type: string
                                vpc:
                                  type: string
                              type: object
                            label:
                              maxLength: 63
                              minLength: 3
                              type: string
                            primary:
                              type: boolean
                            purpose:
                              description: ConfigInterfacePurpose options start with
                                InterfacePurpose and include all known interface purpose
                                types
                              type: string
                            subnetId:
                              type: integer
                          type: object
                        type: array
                        x-kubernetes-validations:
                        - message: Value is immutable
                          rule: self == oldSelf
                      label:
                        maxLength: 63
                        minLength: 3
                        type: string
                        x-kubernetes-validations:
                        - message: Value is immutable
                          rule: self == oldSelf
                      metadata:
                        description: InstanceMetadataOptions defines metadata of instance
                        properties:
                          userData:
                            description: UserData expects a Base64-encoded string
                            type: string
                        type: object
                        x-kubernetes-validations:
                        - message: Value is immutable
                          rule: self == oldSelf
                      privateIp:
                        type: boolean
                        x-kubernetes-validations:
                        - message: Value is immutable
                          rule: self == oldSelf
                      providerID:
                        description: ProviderID is the unique identifier as specified
                          by the cloud provider.
                        type: string
                      region:
                        type: string
                        x-kubernetes-validations:
                        - message: Value is immutable
                          rule: self == oldSelf
                      rootPass:
                        type: string
                        x-kubernetes-validations:
                        - message: Value is immutable
                          rule: self == oldSelf
                      stackscriptData:
                        additionalProperties:
                          type: string
                        type: object
                        x-kubernetes-validations:
                        - message: Value is immutable
                          rule: self == oldSelf
                      stackscriptId:
                        type: integer
                        x-kubernetes-validations:
                        - message: Value is immutable
                          rule: self == oldSelf
                      tags:
                        items:
                          type: string
                        type: array
                        x-kubernetes-validations:
                        - message: Value is immutable
                          rule: self == oldSelf
                      type:
                        type: string
                        x-kubernetes-validations:
                        - message: Value is immutable
                          rule: self == oldSelf
                    required:
                    - region
                    - type
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
    cluster.x-k8s.io/v1beta1: v1alpha1
  name: linodeobjectstoragebuckets.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: LinodeObjectStorageBucket
    listKind: LinodeObjectStorageBucketList
    plural: linodeobjectstoragebuckets
    shortNames:
    - lobj
    singular: linodeobjectstoragebucket
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The name of the bucket
      jsonPath: .spec.label
      name: Label
      type: string
    - description: The ID of the Object Storage cluster for the bucket
      jsonPath: .spec.cluster
      name: Cluster
      type: string
    - description: Bucket and keys have been provisioned
      jsonPath: .status.ready
      name: Ready
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LinodeObjectStorageBucket is the Schema for the linodeobjectstoragebuckets
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: LinodeObjectStorageBucketSpec defines the desired state of
              LinodeObjectStorageBucket
            properties:
              cluster:
                description: Cluster is the ID of the Object Storage cluster for the
                  bucket.
                type: string
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              credentialsRef:
                description: |-
                  CredentialsRef is a reference to a Secret that contains the credentials to use for provisioning the bucket.
                  If not supplied then the credentials of the controller will be used.
                properties:
                  name:
                    description: name is unique within a namespace to reference a
                      secret resource.
                    type: string
                  namespace:
                    description: namespace defines the space within which the secret
                      name must be unique.
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              keyGeneration:
                default: 0
                description: KeyGeneration may be modified to trigger rotations of
                  access keys created for the bucket.
                type: integer
            required:
            - cluster
            type: object
          status:
            description: LinodeObjectStorageBucketStatus defines the observed state
              of LinodeObjectStorageBucket
            properties:
              conditions:
                description: Conditions specify the service state of the LinodeObjectStorageBucket.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              creationTime:
                description: CreationTime specifies the creation timestamp for the
                  bucket.
                format: date-time
                type: string
              failureMessage:
                description: |-
                  FailureMessage will be set in the event that there is a terminal problem
                  reconciling the Object Storage Bucket and will contain a verbose string
                  suitable for logging and human consumption.
                type: string
              hostname:
                description: Hostname is the address assigned to the bucket.
                type: string
              keySecretName:
                description: KeySecretName specifies the name of the Secret containing
                  access keys for the bucket.
                type: string
              lastKeyGeneration:
                description: LastKeyGeneration tracks the last known value of .spec.keyGeneration.
                type: integer
              ready:
                default: false
                description: Ready denotes that the bucket has been provisioned along
                  with access keys.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  labels:
    cluster.x-k8s.io/v1beta1: v1alpha1
  name: linodevpcs.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: LinodeVPC
    listKind: LinodeVPCList
    plural: linodevpcs
    singular: linodevpc
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: LinodeVPC is the Schema for the linodemachines API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: LinodeVPCSpec defines the desired state of LinodeVPC
            properties:
              description:
                type: string
              label:
                maxLength: 63
                minLength: 3
                type: string
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              region:
                type: string
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              subnets:
                items:
                  description: VPCSubnetCreateOptions defines subnet options
                  properties:
                    ipv4:
                      type: string
                    label:
                      maxLength: 63
                      minLength: 3
                      type: string
                  type: object
                type: array
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
              vpcID:
                type: integer
            required:
            - region
            type: object
          status:
            description: LinodeVPCStatus defines the observed state of LinodeVPC
            properties:
              conditions:
                description: Conditions defines current service state of the LinodeVPC.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: |-
                  FailureMessage will be set in the event that there is a terminal problem
                  reconciling the VPC and will contain a more verbose string suitable
                  for logging and human consumption.


                  This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over
                  time (like service outages), but instead indicate that something is
                  fundamentally wrong with the VPC's spec or the configuration of
                  the controller, and that manual intervention is required. Examples
                  of terminal errors would be invalid combinations of settings in the
                  spec, values that are unsupported by the controller, or the
                  responsible controller itself being critically misconfigured.


                  Any transient errors that occur during the reconciliation of VPCs
                  can be added as events to the VPC object and/or logged in the
                  controller's output.
                type: string
              failureReason:
                description: |-
                  FailureReason will be set in the event that there is a terminal problem
                  reconciling the VPC and will contain a succinct value suitable
                  for machine interpretation.


                  This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over
                  time (like service outages), but instead indicate that something is
                  fundamentally wrong with the VPC's spec or the configuration of
                  the controller, and that manual intervention is required. Examples
                  of terminal errors would be invalid combinations of settings in the
                  spec, values that are unsupported by the controller, or the
                  responsible controller itself being critically misconfigured.


                  Any transient errors that occur during the reconciliation of VPCs
                  can be added as events to the VPC object and/or logged in the
                  controller's output.
                type: string
              ready:
                default: false
                description: Ready is true when the provider resource is ready.
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: cluster-api-provider-linode
    app.kubernetes.io/instance: controller-manager-sa
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: cluster-api-provider-linode
  name: capl-controller-manager
  namespace: capl-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: cluster-api-provider-linode
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: cluster-api-provider-linode
  name: capl-leader-election-role
  namespace: capl-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: capl-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - linodeclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - linodeclusters/finalizers
  verbs:
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - linodeclusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - linodemachines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - linodemachines/finalizers
  verbs:
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - linodemachines/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - linodeobjectstoragebuckets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - linodeobjectstoragebuckets/finalizers
  verbs:
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - linodeobjectstoragebuckets/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - linodevpcs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - linodevpcs/finalizers
  verbs:
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - linodevpcs/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: cluster-api-provider-linode
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: cluster-api-provider-linode
  name: capl-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: cluster-api-provider-linode
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: cluster-api-provider-linode
  name: capl-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: cluster-api-provider-linode
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: cluster-api-provider-linode
  name: capl-leader-election-rolebinding
  namespace: capl-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: capl-leader-election-role
subjects:
- kind: ServiceAccount
  name: capl-controller-manager
  namespace: capl-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: cluster-api-provider-linode
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: cluster-api-provider-linode
  name: capl-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capl-manager-role
subjects:
- kind: ServiceAccount
  name: capl-controller-manager
  namespace: capl-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: cluster-api-provider-linode
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: cluster-api-provider-linode
  name: capl-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capl-proxy-role
subjects:
- kind: ServiceAccount
  name: capl-controller-manager
  namespace: capl-system
---
apiVersion: v1
kind: Secret
metadata:
  name: capl-manager-credentials
  namespace: capl-system
stringData:
  apiToken: ${LINODE_TOKEN}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: cluster-api-provider-linode
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: cluster-api-provider-linode
    control-plane: controller-manager
  name: capl-controller-manager-metrics-service
  namespace: capl-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: cluster-api-provider-linode
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: cluster-api-provider-linode
    control-plane: controller-manager
  name: capl-controller-manager
  namespace: capl-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        env:
        - name: LINODE_TOKEN
          valueFrom:
            secretKeyRef:
              key: apiToken
              name: capl-manager-credentials
        - name: LINODE_API_VERSION
          value: v4beta
        image: docker.io/linode/cluster-api-provider-linode:main
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.14.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: capl-controller-manager
      terminationGracePeriodSeconds: 10
